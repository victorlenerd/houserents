version: '3.7'

services:

  # server:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - "./configs/dev/nginx/nginx.conf:/etc/nginx/nginx.conf"
  #     - "./configs/dev/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf"
  
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    environment:
      - ENV=DEV
      - DB_HOST=postgis
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DATA_SERVER=http://scrapper:8080
      - PORT=5000
    depends_on:
      - postgis
    volumes:
      - "./api:/usr/src/hourserents"


  # scrapper:
  #   build: 
  #     context: ./scrapper
  #     dockerfile: Dockerfile.dev
  #   ports: 
  #     - "8080:8080"
  #   environment:
  #     - PORT=8080
  #     - DATA_SERVER=http://api:5000
  #   volumes:
  #     - "./scrapper/src:/usr/src/scrapper/src"
    

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "4040:4040"
    volumes:
      - "./frontend/src:/usr/src/hourserents/src"
    environment:
      - PORT=4040
      - API_SERVER=http://api:5000
      - MAP_API_KEY=AIzaSyCp3UKASbZkqvCnW3l_RLgM5Ik15JBKpPc

  postgis:
    image: mdillon/postgis
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5